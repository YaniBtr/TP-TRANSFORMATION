// automatically generated by Xtext
grammar composant.xtext.comp.Comp with org.eclipse.xtext.common.Terminals

//import "http://composant" 
import "platform:/resource/composant/model/composant.ecore"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Composant returns Composant:
	'component' name=ID
		('(' ports+=Port ( "," ports+=Port)* ')' )?
		'{'
		(fils+=Composant ( fils+=Composant)* )?
		(connecteurs+=Connecteur (connecteurs+=Connecteur)*)?
		
		('properties' properties+=Property ( "," properties+=Property)* )?
	'}';




EString returns ecore::EString:
	STRING | ID;

Property returns Property:
		clee=EString ':=' valeur=EString;

Port returns Port:
	direction=Direction
	name=ID
		('{' properties+=Property ( "," properties+=Property)* '}' )?;

Connecteur returns Connecteur:
	name=ID ':'
		src=[Port|QualifiedID] "->" dst=[Port|QualifiedID]
		('{' properties+=Property ( "," properties+=Property)* '}' )?;

QualifiedID:
	ID('.'ID)?	
;

enum Direction returns Direction:
				IN = 'in' | OUT = 'out';
